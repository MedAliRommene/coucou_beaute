name: 🧪 Tests & Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ develop ]

jobs:
  # ===========================================
  # JOB 1: TESTS PYTHON/DJANGO
  # ===========================================
  test-backend:
    name: 🐍 Backend Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_coucou
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        pip install pytest pytest-django
        
    - name: 🔧 Setup test environment
      run: |
        cd backend
        cp env.example .env
        echo "DJANGO_DEBUG=True" >> .env
        echo "POSTGRES_DB=test_coucou" >> .env
        echo "POSTGRES_USER=postgres" >> .env
        echo "POSTGRES_PASSWORD=postgres" >> .env
        echo "POSTGRES_HOST=localhost" >> .env
        echo "POSTGRES_PORT=5432" >> .env
        
    - name: 🗄️ Run migrations
      run: |
        cd backend
        python manage.py migrate
        
    - name: 🧪 Run tests
      run: |
        cd backend
        python manage.py test
        
    - name: 🔍 Code quality check
      run: |
        cd backend
        pip install flake8
        # Vérifier seulement les erreurs critiques dans le code source
        flake8 users/ adminpanel/ appointments/ reviews/ subscriptions/ front_web/ --count --select=E9,F63,F7,F82 --show-source --statistics

  # ===========================================
  # JOB 2: TESTS FLUTTER/MOBILE
  # ===========================================
  test-mobile:
    name: 📱 Mobile Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐦 Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: 📦 Install dependencies
      run: |
        cd coucou_beaute_mobile
        flutter pub get
        
    - name: 🔍 Analyze code
      run: |
        cd coucou_beaute_mobile
        flutter analyze
        
    - name: 🧪 Run tests
      run: |
        cd coucou_beaute_mobile
        flutter test

  # ===========================================
  # JOB 3: SÉCURITÉ
  # ===========================================
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔍 Python security scan
      run: |
        cd backend
        pip install safety bandit
        safety check
        bandit -r . -f json -o bandit-report.json || true
        
    - name: 📊 Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-report
        path: backend/bandit-report.json
