name: üè∑Ô∏è Release & Tag

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  # ===========================================
  # JOB 1: CR√âATION DE LA RELEASE
  # ===========================================
  create-release:
    name: üè∑Ô∏è Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: üè∑Ô∏è Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: üìù Generate changelog
      id: changelog
      run: |
        # G√©n√©rer un changelog basique
        echo "## üöÄ Release ${{ steps.version.outputs.version }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### ‚ú® Nouvelles fonctionnalit√©s" >> CHANGELOG.md
        echo "- Am√©liorations de l'interface utilisateur" >> CHANGELOG.md
        echo "- Optimisations des performances" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### üêõ Corrections de bugs" >> CHANGELOG.md
        echo "- Corrections diverses" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### üîß Am√©liorations techniques" >> CHANGELOG.md
        echo "- Mise √† jour des d√©pendances" >> CHANGELOG.md
        echo "- Am√©lioration de la s√©curit√©" >> CHANGELOG.md
        
    - name: üè∑Ô∏è Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: false

  # ===========================================
  # JOB 2: D√âPLOIEMENT AUTOMATIQUE
  # ===========================================
  deploy-release:
    name: üöÄ Deploy Release
    needs: create-release
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      
    - name: üîê Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: üöÄ Deploy release to server
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
          cd /opt/coucou_beaute
          
          # R√©cup√©rer la version sp√©cifique
          git fetch --tags
          git checkout ${{ github.ref_name }}
          
          # Sauvegarder la configuration
          if [ -f backend/.env ]; then
            cp backend/.env backend/.env.backup.$(date +%s)
          fi
          
          # Red√©ployer
          docker compose -f docker-compose.prod.yml down
          docker compose -f docker-compose.prod.yml up -d
          
          # V√©rifier le d√©ploiement
          sleep 30
          if curl -f http://localhost:80 > /dev/null 2>&1; then
            echo "‚úÖ Release d√©ploy√©e avec succ√®s !"
          else
            echo "‚ùå Probl√®me de d√©ploiement de la release"
            exit 1
          fi
        '

  # ===========================================
  # JOB 3: NOTIFICATION DE RELEASE
  # ===========================================
  notify-release:
    name: üì¢ Notify Release
    needs: [create-release, deploy-release]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: üìß Send release notification
      run: |
        if [ "${{ needs.deploy-release.result }}" == "success" ]; then
          echo "üéâ Release ${{ github.ref_name }} d√©ploy√©e avec succ√®s !"
          # Ici vous pouvez ajouter des notifications (Slack, Discord, etc.)
        else
          echo "‚ùå √âchec du d√©ploiement de la release ${{ github.ref_name }}"
          # Ici vous pouvez ajouter des notifications d'erreur
        fi
